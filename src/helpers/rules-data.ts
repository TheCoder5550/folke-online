export const RULE_META_DATA: { [id: string]: RuleMetaData | undefined } = {
  "premise": {
    name: "Premise",
    description: "",
    nrArguments: 0,
  },
  "assume": {
    name: "Assumption",
    description: "",
    nrArguments: 0,
  },
  "fresh": {
    name: "Fresh",
    description: "",
    nrArguments: 0,
  },
  "copy": {
    name: "Copy",
    description: "",
    nrArguments: 1,
  },
  "‚àßI": {
    name: "Conjunction introduction",
    description: "",
    nrArguments: 2,
  },
  "‚àßEL": {
    name: "Left conjunction elimination",
    description: "",
    nrArguments: 1,
  },
  "‚àßER": {
    name: "Right conjunction elimination",
    description: "",
    nrArguments: 1,
  },
  "‚à®IL": {
    name: "Left disjunction introduction",
    description: "",
    nrArguments: 1,
  },
  "‚à®IR": {
    name: "Right disjunction introduction",
    description: "",
    nrArguments: 1,
  },
  "‚à®E": {
    name: "Disjunction elimination",
    description: "",
    nrArguments: 3,
  },
  "‚ÜíI": {
    name: "Implication introduction",
    description: "",
    nrArguments: 1,
  },
  "‚ÜíE": {
    name: "Implication elimination",
    description: "",
    nrArguments: 2,
  },
  "¬¨I": {
    name: "Negation introduction",
    description: "",
    nrArguments: 1,
  },
  "¬¨E": {
    name: "Negation elimination",
    description: "",
    nrArguments: 2,
  },
  "‚ä•E": {
    name: "Contradiction elimination",
    description: "",
    nrArguments: 1,
  },
  "¬¨¬¨I": {
    name: "Double negation introduction",
    description: "",
    nrArguments: 1,
  },
  "¬¨¬¨E": {
    name: "Double negation elimination",
    description: "",
    nrArguments: 1,
  },
  "MT": {
    name: "Modus tollens",
    description: "",
    nrArguments: 2,
  },
  "PBC": {
    name: "Proof by contradiction",
    description: "",
    nrArguments: 1,
  },
  "LEM": {
    name: "Law of excluded middle",
    description: "",
    nrArguments: 0,
  },
  "=I": {
    name: "Equality introduction",
    description: "",
    nrArguments: 0,
  },
  "=E": {
    name: "Equality elimination",
    description: "",
    nrArguments: 3,
    argumentLabels: ["", "", "ùùì(u)‚â°"],
    argumentInputLengths: [35, 35, 150]
  },
  "‚àÄE": {
    name: "Universal elimination",
    description: "",
    nrArguments: 2,
  },
  "‚àÄI": {
    name: "Universal introduction",
    description: "",
    nrArguments: 1,
  },
  "‚àÉE": {
    name: "Existential elimination",
    description: "",
    nrArguments: 2,
  },
  "‚àÉI": {
    name: "Existential introduction",
    description: "",
    nrArguments: 1,
  }
};